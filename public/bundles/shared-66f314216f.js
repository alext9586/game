var Shared;!function(e){var t=function(){function t(t){return t?(this._id=t._id,this.players=t.players.map(function(t){return new e.GamePlayer(t)}),this.datePlayed=t.datePlayed,void(this.winner=new e.Player(t.winner))):void(this.players=[])}return t.prototype.getIdAsPath=function(){return"/"+this._id},t.prototype.toGameViewModel=function(){var e={_id:this._id,players:this.players.map(function(e){return e.toGamePlayerViewModel()}),datePlayed:this.datePlayed,winner:this.winner?this.winner.toPlayerViewModel():null};return e},t}();e.Game=t}(Shared||(Shared={}));
var Shared;!function(e){var r=function(){function r(r){return r?(this._id=r._id,this.player=new e.Player(r.player),this.rank=r.rank||0,void(this.points=r.points||0)):void(this.player=new e.Player)}return Object.defineProperty(r.prototype,"playerId",{get:function(){return this.player._id},enumerable:!0,configurable:!0}),r.prototype.toGamePlayerViewModel=function(){var e={_id:this._id,player:this.player.toPlayerViewModel(),rank:this.rank,points:this.points};return e},r}();e.GamePlayer=r}(Shared||(Shared={}));

var Shared;!function(e){var r=function(){function r(r){return r?(this.firstGameOfMonth=r.firstGameOfMonth,void(this.players=r.players.map(function(r){return new e.NewGamePlayer(r)}))):(this.firstGameOfMonth=!0,void(this.players=[]))}return r}();e.NewGame=r}(Shared||(Shared={}));
var Shared;!function(e){var r=function(){function r(r){return r?(this.player=new e.Player(r.player),this.rating=r.rating,void(this.orderNumber=r.orderNumber)):void(this.player=new e.Player)}return Object.defineProperty(r.prototype,"playerId",{get:function(){return this.player._id},enumerable:!0,configurable:!0}),r.prototype.toGamePlayerViewModel=function(){var e={player:this.player.toPlayerViewModel()};return e},r}();e.NewGamePlayer=r}(Shared||(Shared={}));
var Shared;!function(t){var e=function(){function t(t){return t?(this._id=t._id,this.firstName=t.firstName,this.lastName=t.lastName,void(this.nickname=t.nickname)):(this.firstName="",this.lastName="",void(this.nickname=""))}return Object.defineProperty(t.prototype,"initials",{get:function(){return this.firstName.charAt(0)+this.lastName.charAt(0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fullname",{get:function(){return this.firstName+" "+this.lastName},enumerable:!0,configurable:!0}),t.prototype.toPlayerViewModel=function(){var t={_id:this._id,firstName:this.firstName,lastName:this.lastName,nickname:this.nickname};return t},t}();t.Player=e}(Shared||(Shared={}));
var Shared;!function(t){var a=function(){function a(a){return a?(this._id=a._id,this.player=new t.Player(a.player),this.totalPoints=a.totalPoints||0,this.gamesPlayed=a.gamesPlayed||0,this.rating=a.rating||0,void(this.rank=0)):(this.player=new t.Player,this.totalPoints=0,this.gamesPlayed=0,this.rating=0,void(this.rank=0))}return a.prototype.toRankedPlayerViewModel=function(){var t={_id:this._id,player:this.player.toPlayerViewModel(),totalPoints:t.totalPoints,gamesPlayed:t.gamesPlayed,rating:t.rating};return t},a}();t.RankedPlayer=a}(Shared||(Shared={}));
var Shared;!function(t){var o=function(){function t(t,o){this.$timeout=t,this.$window=o,this.alertsList=[]}return Object.defineProperty(t.prototype,"alerts",{get:function(){return this.alertsList},enumerable:!0,configurable:!0}),t.prototype.closeAlert=function(t){this.alertsList.splice(t,1)},t.prototype.addAlert=function(t,o){this.alertsList.push({type:t,msg:o})},t.prototype.clearAlerts=function(){this.alertsList=[]},t.prototype.scrollToTop=function(){var t=this;this.$timeout(function(){t.$window.scrollTo(0,0)})},t.prototype.scrollToBottom=function(){var t=this;this.$timeout(function(){t.$window.scrollTo(0,1e5)})},t.$inject=["$timeout","$window"],t}();t.AlertsService=o}(Shared||(Shared={}));
var Shared;!function(e){var t=function(){function t(e,t){this.$http=e,this.$q=t}return t.prototype.getActiveGamePath=function(e){return"/ActiveGames/json"+e},t.prototype.getEditActiveGamePath=function(e){return"/activeGames/edit/#/"+e},t.prototype.getAllActiveGames=function(){var t=this.$q.defer();return this.$http.get(this.getActiveGamePath("")).success(function(r,o,n,s){if(null===r||void 0===r)t.reject(o);else{var i=r.map(function(t){return new e.Game(t)});t.resolve(i)}}).error(function(e,r,o,n){console.error("Cannot get active games"),t.reject(e)}),t.promise},t.prototype.getActiveGame=function(t){var r=this.$q.defer();return this.$http.get(this.getActiveGamePath(t)).success(function(t,o,n,s){null===t||void 0===t?r.reject(o):r.resolve(new e.Game(t))}).error(function(e,o,n,s){console.error("Cannot get game with id "+t),r.reject(e)}),r.promise},t.prototype.getPlayersForNewGame=function(){var t=this.$q.defer();return this.$http.get("/players/newgame").success(function(r,o,n,s){t.resolve(new e.NewGame(r))}).error(function(e,r,o,n){console.error("Cannot get players for new game"),t.reject(e)}),t.promise},t.prototype.createActiveGame=function(e){var t=this,r=this.$q.defer(),o=e.toGameViewModel();return this.$http.post("/activeGames/save",o).success(function(e,o,n,s){r.resolve(t.getEditActiveGamePath(e._id))}).error(function(e,t,o,n){console.error("Cannot create active game"),r.reject(e)}),r.promise},t.prototype.saveActiveGame=function(e,t){var r=this.$q.defer();return this.$http.put(this.getActiveGamePath(e),t).success(function(e,t,o,n){r.resolve()}).error(function(t,o,n,s){console.error("Cannot save active game with id "+e),r.reject(t)}),r.promise},t.prototype.deleteActiveGame=function(e){var t=this.$q.defer();return this.$http["delete"](this.getActiveGamePath(e)).success(function(e,r,o,n){t.resolve()}).error(function(r,o,n,s){console.error("Cannot delete active game with id "+e),t.reject(r)}),t.promise},t.prototype.saveNewPlayer=function(e){var t=this.$q.defer();return this.$http.post("/players",e).success(function(e,r,o,n){t.resolve()}).error(function(e,r,o,n){console.error("Cannot save player."),t.reject(e)}),t.promise},t.prototype.saveExistingPlayer=function(e){var t=this.$q.defer();return this.$http.put("players/"+e._id,e).success(function(e,r,o,n){t.resolve()}).error(function(e,r,o,n){console.error("Cannot save player."),t.reject(e)}),t.promise},t.prototype.getAllPlayers=function(){var e=this,t=this.$q.defer();return this.$http.get("/players?sort=true").success(function(r,o,n,s){var i=r,a=e.playerNameFormat(i);t.resolve(a)}).error(function(e,r,o,n){console.error("Cannot get all players."),t.reject(e)}),t.promise},t.prototype.getRankedPlayers=function(t,r,o){var n=this.$q.defer();t=void 0===t||null===t?(new Date).getMonth():t,r=void 0===r||null===r?(new Date).getFullYear():r;var s=o?"&hideUnranked=true":"",i="/players/ranked?month="+t+"&year="+r+s;return this.$http.get(i).success(function(t,r,o,s){var i=t.map(function(t){return new e.RankedPlayer(t)});n.resolve(i)}).error(function(e,t,r,o){console.error("Cannot get ranked players."),n.reject(e)}),n.promise},t.prototype.playerNameFormat=function(t){var r=t.map(function(t){return new e.Player(t)});return r},t.prototype.getDotm=function(e,t){var r=this.$q.defer(),o="?month="+e+"&year="+t;return this.$http.get("/Players/dotm"+o).success(function(e,t,o,n){r.resolve(e)}).error(function(e,t,o,n){console.error("Cannot get dorks of the month."),r.reject(e)}),r.promise},t.prototype.getLastPlayedGame=function(){var t=this.$q.defer();return this.$http.get("/Games/LastPlayed").success(function(r,o,n,s){t.resolve(new e.Game(r))}).error(function(e,r,o,n){console.error("Cannot get last game played."),t.reject(e)}),t.promise},t.prototype.getGames=function(t,r){var o=this.$q.defer(),n="/Games?month="+t+"&year="+r;return this.$http.get(n).success(function(t,r,n,s){var i=t.map(function(t){return new e.Game(t)});o.resolve(i)}).error(function(e,t,r,n){console.error("Cannot get games played."),o.reject(e)}),o.promise},t.prototype.finalizeGame=function(e){var t=this.$q.defer();return this.$http.post("/games",e.toGameViewModel()).success(function(e,r,o,n){t.resolve()}).error(function(e,r,o,n){console.error("Cannot finalize game. Status code: "+r+"."),t.reject(e)}),t.promise},t.prototype.deleteGame=function(e){var t=this.$q.defer();return this.$http["delete"]("/games"+e).success(function(e,r,o,n){t.resolve()}).error(function(r,o,n,s){console.error("Cannot delete game with id "+e),t.reject(r)}),t.promise},t.$inject=["$http","$q"],t}();e.ApiService=t}(Shared||(Shared={}));
var Shared;!function(t){var e=function(){function t(){this.monthNames=["January","February","March","April","May","June","July","August","September","October","November","December"],this.abbrMonthNames=["Jan","Feb","Mar","Apr","May","June","July","Aug","Sept","Oct","Nov","Dec"]}return t.prototype.currentYear=function(){return(new Date).getFullYear()},t.prototype.currentMonthValue=function(){return(new Date).getMonth()},t.prototype.currentMonthName=function(){return this.monthNames[this.currentMonthValue()]},t.prototype.lastMonthYear=function(){return this.currentMonthValue()-1<0?this.currentYear()-1:this.currentYear()},t.prototype.lastMonthValue=function(){return this.currentMonthValue()-1<0?11:this.currentMonthValue()-1},t.prototype.lastMonthName=function(){return this.monthNames[this.lastMonthValue()]},t.prototype.monthName=function(t,e){var r=e?this.abbrMonthNames:this.monthNames;return t>=0&&11>=t?r[t]:""},t.prototype.beautifyDate=function(t,e){if(!t)return{month:this.monthName(0,e),day:1,year:1970,hour:12,minute:0,ampm:"AM"};var r=t.getHours();return{month:this.monthName(t.getMonth(),e),day:t.getDate(),year:t.getFullYear(),hour:0===r?12:r>12?r-12:r,minute:t.getMinutes(),ampm:r>=12?"PM":"AM"}},t}();t.DateTimeService=e}(Shared||(Shared={}));
var Shared;!function(t){var a=function(){function t(t){this.$location=t,this.minimumYear=2015}return t.prototype.SanitizeParam=function(t){if(void 0!==t){var a=parseInt(t,10);return isNaN(a)?void 0:a}},t.prototype.getMonthQueryParam=function(t){var a=this.SanitizeParam(this.$location.search().month);return void 0!==a&&(a--,t=a>11?0:0>a?11:a),t},t.prototype.getYearQueryParam=function(t){var a=this.SanitizeParam(this.$location.search().year);return void 0!==a&&(t=a<this.minimumYear?this.minimumYear:a),t},t.prototype.saveQueryParams=function(t,a){this.$location.search("month",t+1),this.$location.search("year",a),this.$location.replace()},t.$inject=["$location"],t}();t.MonthYearQueryService=a}(Shared||(Shared={}));
var Shared;!function(e){var r=function(){function e(e,r){this.$q=e,this.apiService=r,this.allPlayers=[],this.players=[],this.unselectedPlayersList=[]}return Object.defineProperty(e.prototype,"selectedPlayers",{get:function(){return this.players},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"unselectedPlayers",{get:function(){return this.unselectedPlayersList},enumerable:!0,configurable:!0}),e.prototype.playerIndex=function(e){return this.players.map(function(e){return e.playerId}).indexOf(e)},e.prototype.addPlayer=function(e){var r=this.allPlayers.filter(function(r){return r.playerId===e._id});1===r.length?(this.players.push(r[0]),this.curateNewPlayerList()):console.error("Player not found.",e)},e.prototype.removePlayer=function(e){var r=this.playerIndex(e._id);this.players.splice(r,1),this.curateNewPlayerList()},e.prototype.getPlayers=function(){var e=this,r=this.$q.defer();return this.apiService.getPlayersForNewGame().then(function(t){e.allPlayers=t.players,r.resolve(t)},function(){e.allPlayers=[],r.reject()}),r.promise},e.prototype.curateNewPlayerList=function(){var e=this.players.map(function(e){return e.playerId});this.unselectedPlayersList=this.allPlayers.filter(function(r){return-1===e.indexOf(r.playerId)})},e.prototype.reset=function(){this.players=[],this.curateNewPlayerList()},e.prototype.debugShowAllPlayersTable=function(){this.debugPrintPlayersTable(this.allPlayers)},e.prototype.debugShowCuratedPlayersTable=function(){this.debugPrintPlayersTable(this.unselectedPlayers)},e.prototype.debugPrintPlayersTable=function(e){console.info(e.map(function(e){return{orderNumber:e.orderNumber,rating:e.rating,name:e.player.fullname}}))},e.$inject=["$q","apiService"],e}();e.PlayerSelectionService=r}(Shared||(Shared={}));
var Shared;!function(t){var i=function(){function t(t){this.$timeout=t,this.topics={},this.subUid=-1}return t.prototype.subscribe=function(t,i,s){var o=this.subUid+=1;this.topics[t]||(this.topics[t]=[]);var c={token:o,callback:i,once:!!s};return this.topics[t].push(c),o},t.prototype.subscribeOnce=function(t,i){return this.subscribe(t,i,!0)},t.prototype.publish=function(t,i){var s=this;this.topics[t]&&this.$timeout(function(){for(var o=s.topics[t],c=o?o.length:0;c;)c-=1,o[c].callback(t,i),o[c].once&&s.unsubscribe(o[c].token)})},t.prototype.unsubscribe=function(t){for(var i in this.topics)if(this.topics.hasOwnProperty(i)&&this.topics[i])for(var s=this.topics[i].length;s;)s-=1,this.topics[i].splice(s,1)},t.prototype.hasTopic=function(t){return!!this.topics[t]},t}();t.PubSubServiceBase=i}(Shared||(Shared={}));
var Shared;!function(e){function t(){return{scope:{date:"=",showNowButton:"=",disabled:"="},templateUrl:"/shared/directives/DatePickerTemplate.html",controller:"DatePickerController",controllerAs:"ctrl",bindToController:!0}}e.DatePickerDirective=t;var i=function(){function e(e){this.dateTimeService=e,this.format="MMMM dd, yyyy",this.hstep=1,this.mstep=1,this.datePickerOpened=!1,this.timePickerOpened=!1,this.dateOptions={minDate:new Date(2015,4,1),maxDate:new Date,showWeeks:!1,startingDay:0}}return Object.defineProperty(e.prototype,"prettyDate",{get:function(){return this.dateTimeService.beautifyDate(this.date,!0)},enumerable:!0,configurable:!0}),e.prototype.openDatePicker=function(){this.datePickerOpened=!this.datePickerOpened},e.prototype.openTimePicker=function(){this.timePickerOpened=!this.timePickerOpened},e.prototype.withLeadingZero=function(e){return 10>e?"0"+e:""+e},e.prototype.useCurrentTime=function(){this.date=new Date},e.$inject=["dateTimeService"],e}();e.DatePickerController=i}(Shared||(Shared={}));
var Shared;!function(e){function t(){return{scope:{game:"=",showModifyButtons:"=",reload:"&"},templateUrl:"/shared/directives/GameCardTemplate.html",controller:"GameCardController",controllerAs:"ctrl",bindToController:!0}}e.GameCardDirective=t;var r;!function(e){e[e.Ready=0]="Ready",e[e.DeleteWarning=1]="DeleteWarning",e[e.Deleting=2]="Deleting",e[e.Deleted=3]="Deleted",e[e.Copy=4]="Copy",e[e.Error=5]="Error"}(r||(r={}));var o=function(){function t(e,t,o){this.$http=e,this.$window=t,this.apiService=o,this.showOverlay=!1,this.showLoadBar=!1,this.showDeleteWarning=!1,this.showDeleted=!1,this.showError=!1,this.changeState(r.Ready)}return t.prototype.changeState=function(e){switch(this.showOverlay=e!==r.Ready,this.showLoadBar=e===r.Deleting||e===r.Copy,this.showDeleteWarning=e===r.DeleteWarning,this.showError=e===r.Error,this.showDeleted=e===r.Deleted,e){case r.Ready:break;case r.Copy:this.copy();break;case r.Deleting:this["delete"]()}},t.prototype.errorHandler=function(e,t){this.errorMessage=t,console.error(e),this.changeState(r.Error)},t.prototype["delete"]=function(){var e=this;this.apiService.deleteActiveGame(this.game.getIdAsPath()).then(function(){e.changeState(r.Deleted)},function(t){e.errorHandler(t,"Error deleting game!")})},t.prototype.copy=function(){var t=this,r=new e.Game;r.players=this.game.players.map(function(t){var r=new e.GamePlayer;return r.player=t.player,r}),this.apiService.createActiveGame(r).then(function(e){t.$window.location.href=e},function(e){t.errorHandler(e,"Error copying game!")})},t.prototype.warnDelete=function(){this.changeState(r.DeleteWarning)},t.prototype.dismissOverlay=function(){this.changeState(r.Ready)},t.prototype.deleteGame=function(e){this.changeState(r.Deleting)},t.prototype.copyGame=function(e){this.changeState(r.Copy)},t.$inject=["$http","$window","apiService"],t}();e.GameCardController=o}(Shared||(Shared={}));
var Shared;!function(e){function r(){return{scope:{},templateUrl:"/shared/directives/GlobalNavTemplate.html",controller:"GlobalNavController",controllerAs:"ctrl",bindToController:!0}}e.GlobalNavDirective=r;var t=function(){function e(){this.sidebarOpen=!1}return e.prototype.closeSidebar=function(){this.sidebarOpen&&(this.sidebarOpen=!1)},e.$inject=[],e}();e.GlobalNavController=t}(Shared||(Shared={}));
var Shared;!function(r){function n(){return{scope:{},template:'<div class="load-bar"><img src="/images/loader.gif" width="220" height="19" /></div>',controller:"LoadSpinnerController",controllerAs:"ctrl",bindToController:!0}}r.LoadSpinnerDirective=n;var e=function(){function r(){}return r.$inject=[],r}();r.LoadSpinnerController=e}(Shared||(Shared={}));
var Shared;!function(e){function t(){return{scope:{month:"=",year:"=",disabled:"=?",change:"&"},templateUrl:"/shared/directives/MonthYearPickerTemplate.html",controller:"MonthYearPickerController",controllerAs:"ctrl",bindToController:!0}}e.MonthYearPickerDirective=t;var r=function(){function e(e){this.dateTimeService=e,this.isDisabled=!1,this.minimumYear=2015,this.disableYear=!1,this.years=[],this.months=[{name:"January",value:0},{name:"February",value:1},{name:"March",value:2},{name:"April",value:3},{name:"May",value:4},{name:"June",value:5},{name:"July",value:6},{name:"August",value:7},{name:"September",value:8},{name:"October",value:9},{name:"November",value:10},{name:"December",value:11}],this.init()}return Object.defineProperty(e.prototype,"disabled",{get:function(){return this.isDisabled},set:function(e){this.isDisabled=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"month",{get:function(){return void 0===this.currentMonth||null===this.currentMonth?this.dateTimeService.currentMonthValue():this.currentMonth},set:function(e){this.currentMonth=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"year",{get:function(){return void 0===this.currentYear||null===this.currentYear?this.dateTimeService.currentYear():this.currentYear},set:function(e){this.currentYear=e},enumerable:!0,configurable:!0}),e.prototype.init=function(){this.selectedMonth=this.months[this.currentMonth];for(var e=this.minimumYear;e<=this.currentYear;e++){var t={name:e.toString(),value:e};this.years.push(t),e===this.currentYear&&(this.selectedYear=t)}this.disableYear=this.disableYear||this.years.length<=1},e.prototype.updateParams=function(){this.month=this.selectedMonth.value,this.year=this.selectedYear.value,void 0!==this.change&&this.change()},e.$inject=["dateTimeService"],e}();e.MonthYearPickerController=r}(Shared||(Shared={}));
var Shared;!function(e){function t(e){var t=this;return{restrict:"A",link:function(n,i,r){i.on("click",function(){if(!e.getSelection().toString())try{t.setSelectionRange(0,t.value.length)}catch(n){}}),i.on("keyup",function(e){var t=e.which||e.keyCode;return!e.shiftKey&&!e.altKey&&!e.ctrlKey&&t>=48&&57>=t||t>=96&&105>=t||8==t||9==t||13==t||35==t||36==t||37==t||39==t||38==t||40==t||46==t||45==t||173==t||189==t||109==t})}}}e.NumericUpDownDirective=t}(Shared||(Shared={}));
var Shared;!function(e){function r(){return{scope:{numPlayers:"="},templateUrl:"/shared/directives/PlayerBonusPanelTemplate.html",controller:"PlayerBonusPanelController",controllerAs:"ctrl",bindToController:!0}}e.PlayerBonusPanelDirective=r;var n=function(){function e(){}return e.$inject=[],e}();e.PlayerBonusPanelController=n}(Shared||(Shared={}));
var Shared;!function(e){function r(){return{scope:{player:"="},templateUrl:"/shared/directives/PlayerNametagTemplate.html",controller:"PlayerNametagController",controllerAs:"ctrl",bindToController:!0}}e.PlayerNametagDirective=r;var t=function(){function e(){}return e.$inject=[],e}();e.PlayerNametagController=t}(Shared||(Shared={}));
var Shared;!function(r){function e(){return{scope:{player:"="},templateUrl:"/shared/directives/PlayerScoretagTemplate.html",controller:"PlayerScoretagController",controllerAs:"ctrl",bindToController:!0}}r.PlayerScoretagDirective=e;var t=function(){function r(){var r=this.player.rank?this.player.rank:0;this.rank=new Array(r)}return Object.defineProperty(r.prototype,"playerName",{get:function(){return this.player.player},enumerable:!0,configurable:!0}),r.$inject=[],r}();r.PlayerScoretagController=t}(Shared||(Shared={}));
var Shared;!function(e){function t(){return{scope:{players:"=",onSelected:"&",disabled:"="},templateUrl:"/shared/directives/PlayerSelectorTemplate.html",controller:"PlayerSelectorController",controllerAs:"ctrl",bindToController:!0}}e.PlayerSelectorDirective=t;var r=function(){function e(e,t){this.$element=e,this.$timeout=t,this.filter=""}return e.prototype.removeFilter=function(){this.filter=""},e.prototype.selectPlayer=function(e,t,r){this.$element.find("input").focus(),this.onSelected({data:e}),this.removeFilter()},e.$inject=["$element","$timeout"],e}();e.PlayerSelectorController=r}(Shared||(Shared={}));
var GameCardModule=angular.module("GameCardModule",[]);GameCardModule.controller("GameCardController",Shared.GameCardController),GameCardModule.directive("gameCard",Shared.GameCardDirective);
var UxControlsModule=angular.module("UxControlsModule",["ngAnimate","ui.bootstrap"]);UxControlsModule.service("dateTimeService",Shared.DateTimeService),UxControlsModule.service("monthYearQueryService",Shared.MonthYearQueryService),UxControlsModule.service("apiService",Shared.ApiService),UxControlsModule.controller("LoadSpinnerController",Shared.LoadSpinnerController),UxControlsModule.directive("loadSpinner",Shared.LoadSpinnerDirective),UxControlsModule.controller("DatePickerController",Shared.DatePickerController),UxControlsModule.directive("datePicker",Shared.DatePickerDirective),UxControlsModule.controller("MonthYearPickerController",Shared.MonthYearPickerController),UxControlsModule.directive("monthYearPicker",Shared.MonthYearPickerDirective),UxControlsModule.controller("PlayerNametagController",Shared.PlayerNametagController),UxControlsModule.directive("playerNametag",Shared.PlayerNametagDirective),UxControlsModule.controller("PlayerScoretagController",Shared.PlayerScoretagController),UxControlsModule.directive("playerScoretag",Shared.PlayerScoretagDirective),UxControlsModule.controller("GlobalNavController",Shared.GlobalNavController),UxControlsModule.directive("globalNav",Shared.GlobalNavDirective),UxControlsModule.directive("numericUpDown",Shared.NumericUpDownDirective);
//# sourceMappingURL=maps/shared-66f314216f.js.map